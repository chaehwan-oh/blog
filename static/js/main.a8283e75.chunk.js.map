{"version":3,"sources":["components/SideNav/SideNav.tsx","components/Write/Write.tsx","components/Posts/Posts.tsx","components/Contact/Contact.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sideNavStyle","height","width","position","zIndex","top","left","backgroundColor","overflowX","paddingTop","mainStyle","marginLeft","SideNav","props","publicUrl","process","className","style","menus","map","menu","idx","to","path","label","route","index","exact","children","component","Write","Posts","Contact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAgBMA,EAA+B,CACjCC,OAAQ,OACRC,MAAO,QACPC,SAAU,QACVC,OAAQ,EACRC,IAAK,EACLC,KAAM,EACNC,gBAAiB,OACjBC,UAAW,SACXC,WAAY,QAWVC,EAAY,CACdC,WAAY,SAiCDC,MA7Bf,SAAiBC,GACb,IAAMC,EAAYC,QAElB,OACI,qBAAKC,UAAU,UAAUC,MAAOjB,EAAhC,SACI,eAAC,IAAD,WACI,6BACKa,EAAMK,MAAMC,KAAI,SAACC,EAAYC,GAC1B,OAAO,+BAAc,cAAC,IAAD,CAAMC,GAAIR,SAAkBM,EAAKG,KAAjC,SAAwCH,EAAKI,QAA3D,MAASH,QAGxB,sBAAKL,UAAU,OACVC,MAAOP,EADZ,UAEI,cAAC,IAAD,UACKG,EAAMK,MAAMC,KAAI,SAACM,EAAOC,GAAR,OACb,cAAC,IAAD,CAEIH,KAAMT,EAAYW,EAAMF,KACxBI,MAAOF,EAAME,MACbC,SAAU,cAACH,EAAMI,UAAP,KAHLH,QALrB,gCC/CHI,EAAQ,SAACjB,GAClB,OACI,qBAAKG,UAAU,QAAf,iCCFKe,EAAQ,SAAClB,GAClB,OACI,qBAAKG,UAAU,QAAf,oDCFKgB,EAAU,SAACnB,GACpB,OACI,qBAAKG,UAAU,UAAf,uCC0COiB,MAlCf,WACI,IAAIf,EAAgB,CAChB,CACIK,KAAM,SACNI,OAAO,EACPH,MAAO,wCACPK,UAAW,kBAAM,cAAC,EAAD,MAOrB,CACIN,KAAM,WACNI,OAAO,EACPH,MAAO,eACPK,UAAW,kBAAM,cAAC,EAAD,MAErB,CACIN,KAAM,SACNI,OAAO,EACPH,MAAO,qBACPK,UAAW,kBAAM,cAAC,EAAD,OAIzB,OACA,qBAAKb,UAAU,MAAf,SACI,cAAC,EAAD,CAASE,MAAOA,OC9BTgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8283e75.chunk.js","sourcesContent":["import React from 'react';\nimport CSS from 'csstype';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport BlogDetail from '../BlogDetail/BlogDetail';\nimport {Menu} from \"../../App\";\n\nexport interface SideNavProps {\n    menus: Menu[]\n    children?: JSX.Element[] | JSX.Element\n}\n\nconst sideNavStyle: CSS.Properties = {\n    height: '100%',\n    width: '200px',\n    position: 'fixed',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n    backgroundColor: '#111',\n    overflowX: 'hidden',\n    paddingTop: '20px',\n};\n\nconst linkStyle = {\n    padding: '6px 6px 6px 32px',\n    textDecoration: 'none',\n    fontSize: '25px',\n    color: '#818181',\n    display: 'block',\n};\n\nconst mainStyle = {\n    marginLeft: '200px', /* Same as the width of the sidenav */\n};\n\n\nfunction SideNav(props: SideNavProps) {\n    const publicUrl = process.env.PUBLIC_URL;\n\n    return (\n        <div className=\"SideNav\" style={sideNavStyle}>\n            <Router>\n                <ul>\n                    {props.menus.map((menu: Menu, idx: number) => {\n                        return <li key={idx}><Link to={publicUrl + '/' + menu.path}>{menu.label}</Link> </li>\n                    })}\n                </ul>\n                <div className=\"main\"\n                     style={mainStyle}>\n                    <Switch>\n                        {props.menus.map((route, index) => (\n                            <Route\n                                key={index}\n                                path={publicUrl + route.path}\n                                exact={route.exact}\n                                children={<route.component/>}\n                            />\n                        ))}\n                    </Switch>\n                    무야호..\n                </div>\n            </Router>\n        </div>);\n}\n\nexport default SideNav;\n\n","import React from 'react';\n\nexport interface WriteProps {\n}\n\nexport const Write = (props: WriteProps) => {\n    return (\n        <div className=\"Write\">\n            글쓰기\n        </div>\n    );\n}\n","import React from 'react';\n\nexport interface PostsProps {\n}\n\nexport const Posts = (props: PostsProps) => {\n    return (\n        <div className=\"Posts\">\n            게시물 리스트\n        </div>\n    );\n}\n","import React from 'react';\n\nexport interface ContactProps {\n}\n\nexport const Contact = (props: ContactProps) => {\n    return (\n        <div className=\"Contact\">\n            문의하기\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport SideNav from \"./components/SideNav/SideNav\";\nimport {Write} from \"./components/Write/Write\";\nimport BlogDetail from \"./components/BlogDetail/BlogDetail\";\nimport {Posts} from \"./components/Posts/Posts\";\nimport {Contact} from \"./components/Contact/Contact\";\n\nexport interface Menu {\n    path: string,\n    exact?: boolean,\n    label: string,\n    component: () => JSX.Element\n}\n\nfunction App() {\n    let menus: Menu[] = [\n        {\n            path: \"/posts\",\n            exact: false,\n            label: \"게시글 리스트\",\n            component: () => <Posts></Posts>\n        },\n        // {\n        //     path: \"/post/:postId\",\n        //     label: \"상세 페이지\",\n        //     component: () => <BlogDetail></BlogDetail>\n        // },\n        {\n            path: \"/contact\",\n            exact: false,\n            label: \"문의\",\n            component: () => <Contact></Contact>\n        },\n        {\n            path: \"/write\",\n            exact: false,\n            label: \"글쓰기\",\n            component: () => <Write></Write>\n        }\n    ];\n\n    return (\n    <div className=\"App\">\n        <SideNav menus={menus}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}